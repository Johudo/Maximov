# Generated by Django 4.0b1 on 2021-11-19 14:03

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=128, unique=True, verbose_name='Название страны')),
            ],
            options={
                'verbose_name': 'Страна производитель',
                'verbose_name_plural': 'Страны производители',
                'db_table': 'country',
                'ordering': ['id', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ProductType',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=128, unique=True, verbose_name='Название товара')),
            ],
            options={
                'verbose_name': 'Тип товара',
                'verbose_name_plural': 'Типы товара',
                'db_table': 'product_type',
                'ordering': ['id', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Provider',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=128, unique=True, verbose_name='Название компании поставщика')),
            ],
            options={
                'verbose_name': 'Поставщик',
                'verbose_name_plural': 'Поставщики',
                'db_table': 'provider',
                'ordering': ['id', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Storage',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('address', models.CharField(max_length=128, unique=True, verbose_name='Адрес склада')),
            ],
            options={
                'verbose_name': 'Склад',
                'verbose_name_plural': 'Склады',
                'db_table': 'storage',
                'ordering': ['id', 'address'],
            },
        ),
        migrations.CreateModel(
            name='Сharacteristic',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=128, unique=True, verbose_name='Название характиеристики')),
            ],
            options={
                'verbose_name': 'Характеристика',
                'verbose_name_plural': 'Характеристики',
                'db_table': 'characteristic',
                'ordering': ['id', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('сreation_year', models.PositiveIntegerField(default=2021, validators=[django.core.validators.MinValueValidator(1900), django.core.validators.MaxValueValidator(2021)], verbose_name='Год выпуска')),
                ('price', models.DecimalField(decimal_places=2, max_digits=9, verbose_name='Цена')),
                ('name', models.CharField(max_length=300, unique=True, verbose_name='Название товара')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='products.country', verbose_name='Страна производитель')),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='products.provider', verbose_name='поставщик')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='products.producttype', verbose_name='Тип товара')),
            ],
            options={
                'verbose_name': 'Товар',
                'verbose_name_plural': 'Товары',
                'db_table': 'product',
                'ordering': ['id', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ProductСharacteristic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=128, verbose_name='Значение')),
                ('characteristic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_characteristic', to='products.сharacteristic', verbose_name='Характеристика')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_characteristic', to='products.product', verbose_name='Товар')),
            ],
            options={
                'verbose_name': 'Характеристика товара',
                'verbose_name_plural': 'Характеристики товаров',
                'db_table': 'product_characteristic',
                'ordering': ['product', 'characteristic'],
                'unique_together': {('product', 'characteristic')},
            },
        ),
        migrations.CreateModel(
            name='ProductStorageCount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.PositiveIntegerField(verbose_name='Количество')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_storage_count', to='products.product', verbose_name='Товар')),
                ('storage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_storage_count', to='products.storage', verbose_name='Склад')),
            ],
            options={
                'verbose_name': 'Количество товара',
                'verbose_name_plural': 'Количество товара',
                'db_table': 'product_storage_count',
                'ordering': ['product', 'storage'],
                'unique_together': {('product', 'storage')},
            },
        ),
    ]
